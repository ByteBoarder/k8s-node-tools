# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Deploy this DaemonSet to configure hugepages on nodes with the
# "cloud.google.com/gke-configure-hugepages=true" label.
#
# Change the values of NR_HUGEPAGES and HUGEPAGE_SIZE to suit your needs. See
# https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt for details.
# This daemonset currently only supports 1G and 2M hugepages. The task will
# also fail if the node it's run on does not have enough free memory for the
# kernel to allocate the requested number of hugepages with the specified size.
#
# WARNING: Changing the hugepages requires a kubelet restart. Therefore, in
# order to avoid disrupting your workloads, it is recommended to create a new
# node pool with the "cloud.google.com/gke-configure-hugepages=true" label in your
# cluster, deploy the DaemonSet to configure hugepages in that node pool,
# and then migrate your workloads to the new node pool.
# 
# This DaemonSet will work on Standard clusters and cannot be run on Autopilot
# cluster. There are currently no workaround for Autopilot cluster for enabling hugepages.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gke-configure-hugepages
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: gke-configure-hugepages
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: gke-configure-hugepages
    spec:
      tolerations:
      - operator: Exists
      volumes:
      - name: host
        hostPath:
          path: /
      hostPID: true
      initContainers:
      - name: gke-configure-hugepages
        image: "gke.gcr.io/gke-distroless/bash"
        env:
        # Number of 2M hugepages. Update the value as desired.
        - name: NR_HUGEPAGES_2M
          value: "0"
        # Number of 1G hugepages. Update the value as desired.
        - name: NR_HUGEPAGES_1G
          value: "0"
        command:
        - /bin/bash
        - -c
        - |
          set -xeuo pipefail

          function err() { echo >&2 "$@"; }

          # Writes to the nr_hugepages sysfs file for the given size (in kB),
          # and then checks that we got that many hugepages afterward.  Returns
          # error if the result does not match.
          #
          # $1: hugepages size in kB, as seen in /sys/kernel/mm/hugepages.
          # $2: number of hugepages of that size.
          function set-nr-hugepages() {
            [[ "$#" -eq 2 ]] || return
            local size; size="$1"; shift
            local number; number="$1"; shift

            local dest; dest="/host/sys/kernel/mm/hugepages/hugepages-${size}/nr_hugepages"

            echo "Attempting to create ${number} hugepages of size ${size}"
            echo -n "${number}" >"${dest}"
            local actual; actual="$(cat "${dest}")"
            if [[ "${actual}" != "${number}" ]]; then
              err "Attempted to create ${number} hugepages of size ${size} but got ${actual}"
              return 1
            fi
            echo "Successfully created ${number} hugepages of size ${size}!"
          }

          set-nr-hugepages "2048kB"    "${NR_HUGEPAGES_2M}"
          set-nr-hugepages "1048576kB" "${NR_HUGEPAGES_1G}"

          echo "Restarting kubelet..."
          chroot /host nsenter -a -t1 -- systemctl restart kubelet.service
          echo "Success!"
        volumeMounts:
        - name: host
          mountPath: /host
        resources:
          requests:
            memory: 5Mi
            cpu: 5m
        securityContext:
          privileged: true
      containers:
      - image: gcr.io/google-containers/pause:3.2
        name: pause
      # Ensures that the pods will only run on the nodes having the correct
      # label.
      nodeSelector:
        "cloud.google.com/gke-configure-hugepages": "true"
